<?php
require_once File::build_path(array("model", 'Model.php'));

class ModelUniteDEnseignement extends Model
{

    protected static $primary = 'nUe';
    protected static $object = 'UniteDEnseignement';

    private $nUE;
    private $codeDiplome;

    /**
     * @return mixed
     */
    public function getNUE()
    {
        return $this->nUE;
    }

    /**
     * @return mixed
     */
    public function getCodeDiplome()
    {
        return $this->codeDiplome;
    }

    /**
     * @param mixed $codeDiplome
     */
    public function setCodeDiplome($codeDiplome)
    {
        $this->codeDiplome = $codeDiplome;
    }

    public static function selectAll()
    {
        $retourne = parent::selectAll(); // TODO: Change the autogenerated stub
        foreach ($retourne as $cle => $item) {
            $retourne[$cle]->setCodeDiplome(ModelDiplome::select($item->getCodeDiplome()));
        }
    }

    public static function select($primary_value)
    {
        $retourne = parent::select($primary_value); // TODO: Change the autogenerated stub
        if (!$retourne) return false;
        $retourne->setCodeDiplome(ModelDiplome::select($retourne->getCodeDiplome()));
        return $retourne;
    }

    public static function selectAllByDiplome($codeDiplome)
    {
        try {
            $sql = 'SELECT * FROM ' . self::$object . ' WHERE codeDiplome=:codeDiplome';
            $rep = Model::$pdo->prepare($sql);
            $values = array('codeDiplome' => $codeDiplome);
            $rep->execute($values);
            $rep->setFetchMode(PDO::FETCH_CLASS, 'ModelUniteDEnseignement');
            $retourne = $rep->fetchAll();
            foreach ($retourne as $cle => $item) {
                $retourne[$cle]->setCodeDiplome(ModelDiplome::select($item->getCodeDiplome()));
            }
            return $retourne;
        } catch (Exception $e) {
            return false;
        }
    }

}